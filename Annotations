package com.openWeb;
 
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.Arrays;
 
 
import com.microsoft.playwright.Browser;
import com.microsoft.playwright.BrowserType;
import com.microsoft.playwright.Locator;
import com.microsoft.playwright.Page;
import com.microsoft.playwright.Playwright;
import com.microsoft.playwright.junit.Options;
import com.microsoft.playwright.junit.OptionsFactory;
import com.microsoft.playwright.junit.UsePlaywright;
 
@UsePlaywright
public class Practice1 {
	public static  class MyOptions implements OptionsFactory {
		@Override
		public Options getOptions() {
			return new Options()
					.setHeadless(false)
					.setLaunchOptions(new BrowserType.LaunchOptions()
							.setArgs(Arrays.asList("--no-sandbox","--disable-extensions","--disable-gpu")))
					;
		}
	}
	Playwright Jan;
	Browser Jan1;
	Page Jan2;
 
	@BeforeEach
	void setup() {
		Jan = Playwright.create();
		Jan1 = Jan.chromium().launch( new BrowserType.LaunchOptions().setHeadless(false)
				.setArgs(Arrays.asList("--no-sandbox","--disable-extensions","--disable-gpu"))
				);
		Jan2 = Jan1.newPage();
	}
 
	@AfterEach
	void teardown() {
		Jan1.close();
		Jan.close();
	}
 
	@Test
	void OpenPage() {
 
		Jan2.navigate("https://practicesoftwaretesting.com/");
		String title = Jan2.title();
		Assertions.assertTrue(title.contains("Practice Software Testing"));
	}
 
	@Test
	void Search() {
		Jan2.navigate("https://practicesoftwaretesting.com/");
		Locator search = Jan2.locator("[placeholder='Search']");
		search.scrollIntoViewIfNeeded();
		search.fill("Pliers");
		Jan2.locator("button:has-text('Search')").click();
		int Ni = Jan2.locator(".card").count();
		Assertions.assertTrue(Ni > 1);
	}
}
